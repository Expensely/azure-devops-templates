parameters:
  - name: awsRegion
    displayName: AWS region to push image to
    type: string
    default: $(REGION)
  - name: destinationPath
    displayName: Path(key) in the bucket to upload the specified file to
    type: string
  - name: appSpecFileName
    displayName: Name of the appspec file to upload
    type: string
  - name: workingDirectory
    displayName: Directory where the app spec file is located
    type: string
    default: $(Pipeline.Workspace)

steps:
  - task: PowerShell@2
    displayName: Push AppSpec file
    inputs:
      targetType: inline
      script: aws s3 cp ${{ parameters.appSpecFileName }} s3://$(CODEDEPLOY_BUCKET_NAME)/${{ parameters.destinationPath }}/${{ parameters.appSpecFileName }} --region ${{ parameters.awsRegion }}
      errorActionPreference: default
      showWarnings: true
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectory }}

  - task: PowerShell@2
    displayName: Deploy
    name: deploy
    inputs:
      targetType: inline
      script: |
        $deploymentId = aws deploy create-deployment --cli-input-json file://create-deployment.json --output json --query 'deploymentId' --region ${{ parameters.awsRegion }} | ConvertFrom-Json
        Write-Host "##vso[task.setvariable variable=deploymentId]$deploymentId"
        Write-Host "Waiting for deployment:$deploymentId to finish"
        aws deploy wait deployment-successful --deployment-id $deploymentId --region ${{ parameters.awsRegion }}
      errorActionPreference: default
      showWarnings: true
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectory }}

  - task: PowerShell@2
    displayName: Stop deploy
    condition: or(and(failed(), ne(variables['deploy.deploymentId'], '')), and(canceled(), ne(variables['deploy.deploymentId'], '')))
    inputs:
      targetType: inline
      script: |
        Write-Host "$(deploymentId)"
        aws deploy stop-deployment --deployment-id $(deploymentId) --auto-rollback-enabled --region ${{ parameters.awsRegion }}
      errorActionPreference: default
      showWarnings: true
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectory }}